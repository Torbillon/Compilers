State 98 conflicts: 12 shift/reduce
State 149 conflicts: 12 shift/reduce


Grammar

    0 $accept: exp $end

    1 exp: lvalue
    2    | NIL
    3    | sequence
    4    | no_value
    5    | INT
    6    | STRING
    7    | negation
    8    | function_call
    9    | record_create
   10    | array_create
   11    | assignment
   12    | if_state
   13    | while
   14    | for
   15    | BREAK
   16    | let_exp
   17    | parentheses
   18    | algebra

   19 algebra: exp OR exp
   20        | exp AND exp
   21        | exp EQ exp
   22        | exp NEQ exp
   23        | exp LE exp
   24        | exp LT exp
   25        | exp GT exp
   26        | exp GE exp
   27        | exp PLUS exp
   28        | exp MINUS exp
   29        | exp TIMES exp
   30        | exp DIVIDE exp

   31 lvalue: ID
   32       | lvalue_prime

   33 lvalue_prime: ID DOT ID lvalue_prime_two
   34             | ID LBRACK exp RBRACK lvalue_prime_two

   35 lvalue_prime_two: %empty
   36                 | DOT ID lvalue_prime_two
   37                 | LBRACK exp RBRACK lvalue_prime_two

   38 sequence: LPAREN sequence_one

   39 sequence_one: exp sequence_two

   40 sequence_two: SEMICOLON sequence_three

   41 sequence_three: exp sequence_four

   42 sequence_four: RPAREN
   43              | sequence_two

   44 no_value: LPAREN RPAREN
   45         | LET decs IN END

   46 negation: MINUS exp

   47 function_call: ID LPAREN RPAREN
   48              | ID LPAREN exp function_call_one RPAREN

   49 function_call_one: %empty
   50                  | COMMA exp function_call_one

   51 record_create: ID LBRACE record_create_one RBRACE

   52 record_create_one: %empty
   53                  | ID EQ exp record_create_two

   54 record_create_two: %empty
   55                  | record_create_two COMMA ID EQ exp

   56 array_create: ID LBRACK exp RBRACK OF exp

   57 assignment: lvalue ASSIGN exp

   58 if_state: IF exp THEN exp
   59         | IF exp THEN exp ELSE exp

   60 while: WHILE exp DO exp

   61 for: FOR ID ASSIGN exp TO exp DO exp

   62 let_exp: LET decs IN exp_sequence END

   63 exp_sequence: exp SEMICOLON exp_sequence
   64             | exp

   65 parentheses: LPAREN exp RPAREN

   66 decs: decs dec
   67     | %empty

   68 dec: tydec
   69    | vardec
   70    | fundec

   71 tydec: TYPE ID EQ ty

   72 ty: ID
   73   | LBRACE tyfields RBRACE
   74   | ARRAY OF ID

   75 tyfields: %empty
   76         | ID COLON ID tyfields_one

   77 tyfields_one: %empty
   78             | COMMA ID COLON ID

   79 vardec: VAR ID ASSIGN exp
   80       | VAR ID COLON ID ASSIGN exp

   81 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   82       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 31 33 34 36 47 48 51 53 55 56 61 71 72 74 76 78 79 80 81 82
STRING (259) 6
INT (260) 5
COMMA (261) 50 55 78
COLON (262) 76 78 80 82
SEMICOLON (263) 40 63
LPAREN (264) 38 44 47 48 65 81 82
RPAREN (265) 42 44 47 48 65 81 82
LBRACK (266) 34 37 56
RBRACK (267) 34 37 56
LBRACE (268) 51 73
RBRACE (269) 51 73
DOT (270) 33 36
PLUS (271) 27
MINUS (272) 28 46
TIMES (273) 29
DIVIDE (274) 30
EQ (275) 21 53 55 71 81 82
NEQ (276) 22
LT (277) 24
LE (278) 23
GT (279) 25
GE (280) 26
AND (281) 20
OR (282) 19
ASSIGN (283) 57 61 79 80
ARRAY (284) 74
IF (285) 58 59
THEN (286) 58 59
ELSE (287) 59
WHILE (288) 60
FOR (289) 61
TO (290) 61
DO (291) 60 61
LET (292) 45 62
IN (293) 45 62
END (294) 45 62
OF (295) 56 74
BREAK (296) 15
NIL (297) 2
FUNCTION (298) 81 82
VAR (299) 79 80
TYPE (300) 71
LOWER_THAN_ELSE (301)
UMINUS (302)


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
exp (49)
    on left: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18, on right:
    0 19 20 21 22 23 24 25 26 27 28 29 30 34 37 39 41 46 48 50 53 55
    56 57 58 59 60 61 63 64 65 79 80 81 82
algebra (50)
    on left: 19 20 21 22 23 24 25 26 27 28 29 30, on right: 18
lvalue (51)
    on left: 31 32, on right: 1 57
lvalue_prime (52)
    on left: 33 34, on right: 32
lvalue_prime_two (53)
    on left: 35 36 37, on right: 33 34 36 37
sequence (54)
    on left: 38, on right: 3
sequence_one (55)
    on left: 39, on right: 38
sequence_two (56)
    on left: 40, on right: 39 43
sequence_three (57)
    on left: 41, on right: 40
sequence_four (58)
    on left: 42 43, on right: 41
no_value (59)
    on left: 44 45, on right: 4
negation (60)
    on left: 46, on right: 7
function_call (61)
    on left: 47 48, on right: 8
function_call_one (62)
    on left: 49 50, on right: 48 50
record_create (63)
    on left: 51, on right: 9
record_create_one (64)
    on left: 52 53, on right: 51
record_create_two (65)
    on left: 54 55, on right: 53 55
array_create (66)
    on left: 56, on right: 10
assignment (67)
    on left: 57, on right: 11
if_state (68)
    on left: 58 59, on right: 12
while (69)
    on left: 60, on right: 13
for (70)
    on left: 61, on right: 14
let_exp (71)
    on left: 62, on right: 16
exp_sequence (72)
    on left: 63 64, on right: 62 63
parentheses (73)
    on left: 65, on right: 17
decs (74)
    on left: 66 67, on right: 45 62 66
dec (75)
    on left: 68 69 70, on right: 66
tydec (76)
    on left: 71, on right: 68
ty (77)
    on left: 72 73 74, on right: 71
tyfields (78)
    on left: 75 76, on right: 73 81 82
tyfields_one (79)
    on left: 77 78, on right: 76
vardec (80)
    on left: 79 80, on right: 69
fundec (81)
    on left: 81 82, on right: 70


State 0

    0 $accept: . exp $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 12
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 1

   31 lvalue: ID .
   33 lvalue_prime: ID . DOT ID lvalue_prime_two
   34             | ID . LBRACK exp RBRACK lvalue_prime_two
   47 function_call: ID . LPAREN RPAREN
   48              | ID . LPAREN exp function_call_one RPAREN
   51 record_create: ID . LBRACE record_create_one RBRACE
   56 array_create: ID . LBRACK exp RBRACK OF exp

    LPAREN  shift, and go to state 28
    LBRACK  shift, and go to state 29
    LBRACE  shift, and go to state 30
    DOT     shift, and go to state 31

    $default  reduce using rule 31 (lvalue)


State 2

    6 exp: STRING .

    $default  reduce using rule 6 (exp)


State 3

    5 exp: INT .

    $default  reduce using rule 5 (exp)


State 4

   38 sequence: LPAREN . sequence_one
   44 no_value: LPAREN . RPAREN
   65 parentheses: LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 32
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 33
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    sequence_one   go to state 34
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 5

   46 negation: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 35
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 6

   58 if_state: IF . exp THEN exp
   59         | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 36
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 7

   60 while: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 37
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 8

   61 for: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 38


State 9

   45 no_value: LET . decs IN END
   62 let_exp: LET . decs IN exp_sequence END

    $default  reduce using rule 67 (decs)

    decs  go to state 39


State 10

   15 exp: BREAK .

    $default  reduce using rule 15 (exp)


State 11

    2 exp: NIL .

    $default  reduce using rule 2 (exp)


State 12

    0 $accept: exp . $end
   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp

    $end    shift, and go to state 40
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52


State 13

   18 exp: algebra .

    $default  reduce using rule 18 (exp)


State 14

    1 exp: lvalue .
   57 assignment: lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 53

    $default  reduce using rule 1 (exp)


State 15

   32 lvalue: lvalue_prime .

    $default  reduce using rule 32 (lvalue)


State 16

    3 exp: sequence .

    $default  reduce using rule 3 (exp)


State 17

    4 exp: no_value .

    $default  reduce using rule 4 (exp)


State 18

    7 exp: negation .

    $default  reduce using rule 7 (exp)


State 19

    8 exp: function_call .

    $default  reduce using rule 8 (exp)


State 20

    9 exp: record_create .

    $default  reduce using rule 9 (exp)


State 21

   10 exp: array_create .

    $default  reduce using rule 10 (exp)


State 22

   11 exp: assignment .

    $default  reduce using rule 11 (exp)


State 23

   12 exp: if_state .

    $default  reduce using rule 12 (exp)


State 24

   13 exp: while .

    $default  reduce using rule 13 (exp)


State 25

   14 exp: for .

    $default  reduce using rule 14 (exp)


State 26

   16 exp: let_exp .

    $default  reduce using rule 16 (exp)


State 27

   17 exp: parentheses .

    $default  reduce using rule 17 (exp)


State 28

   47 function_call: ID LPAREN . RPAREN
   48              | ID LPAREN . exp function_call_one RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 54
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 55
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 29

   34 lvalue_prime: ID LBRACK . exp RBRACK lvalue_prime_two
   56 array_create: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 56
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 30

   51 record_create: ID LBRACE . record_create_one RBRACE

    ID  shift, and go to state 57

    $default  reduce using rule 52 (record_create_one)

    record_create_one  go to state 58


State 31

   33 lvalue_prime: ID DOT . ID lvalue_prime_two

    ID  shift, and go to state 59


State 32

   44 no_value: LPAREN RPAREN .

    $default  reduce using rule 44 (no_value)


State 33

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   39 sequence_one: exp . sequence_two
   65 parentheses: LPAREN exp . RPAREN

    SEMICOLON  shift, and go to state 60
    RPAREN     shift, and go to state 61
    PLUS       shift, and go to state 41
    MINUS      shift, and go to state 42
    TIMES      shift, and go to state 43
    DIVIDE     shift, and go to state 44
    EQ         shift, and go to state 45
    NEQ        shift, and go to state 46
    LT         shift, and go to state 47
    LE         shift, and go to state 48
    GT         shift, and go to state 49
    GE         shift, and go to state 50
    AND        shift, and go to state 51
    OR         shift, and go to state 52

    sequence_two  go to state 62


State 34

   38 sequence: LPAREN sequence_one .

    $default  reduce using rule 38 (sequence)


State 35

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   46 negation: MINUS exp .

    $default  reduce using rule 46 (negation)


State 36

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   58 if_state: IF exp . THEN exp
   59         | IF exp . THEN exp ELSE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    THEN    shift, and go to state 63


State 37

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   60 while: WHILE exp . DO exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    DO      shift, and go to state 64


State 38

   61 for: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 65


State 39

   45 no_value: LET decs . IN END
   62 let_exp: LET decs . IN exp_sequence END
   66 decs: decs . dec

    IN        shift, and go to state 66
    FUNCTION  shift, and go to state 67
    VAR       shift, and go to state 68
    TYPE      shift, and go to state 69

    dec     go to state 70
    tydec   go to state 71
    vardec  go to state 72
    fundec  go to state 73


State 40

    0 $accept: exp $end .

    $default  accept


State 41

   27 algebra: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 74
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 42

   28 algebra: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 75
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 43

   29 algebra: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 76
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 44

   30 algebra: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 77
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 45

   21 algebra: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 78
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 46

   22 algebra: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 79
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 47

   24 algebra: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 80
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 48

   23 algebra: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 81
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 49

   25 algebra: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 82
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 50

   26 algebra: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 83
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 51

   20 algebra: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 84
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 52

   19 algebra: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 85
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 53

   57 assignment: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 86
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 54

   47 function_call: ID LPAREN RPAREN .

    $default  reduce using rule 47 (function_call)


State 55

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   48 function_call: ID LPAREN exp . function_call_one RPAREN

    COMMA   shift, and go to state 87
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 49 (function_call_one)

    function_call_one  go to state 88


State 56

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   34 lvalue_prime: ID LBRACK exp . RBRACK lvalue_prime_two
   56 array_create: ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 89
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52


State 57

   53 record_create_one: ID . EQ exp record_create_two

    EQ  shift, and go to state 90


State 58

   51 record_create: ID LBRACE record_create_one . RBRACE

    RBRACE  shift, and go to state 91


State 59

   33 lvalue_prime: ID DOT ID . lvalue_prime_two

    LBRACK  shift, and go to state 92
    DOT     shift, and go to state 93

    $default  reduce using rule 35 (lvalue_prime_two)

    lvalue_prime_two  go to state 94


State 60

   40 sequence_two: SEMICOLON . sequence_three

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp             go to state 95
    algebra         go to state 13
    lvalue          go to state 14
    lvalue_prime    go to state 15
    sequence        go to state 16
    sequence_three  go to state 96
    no_value        go to state 17
    negation        go to state 18
    function_call   go to state 19
    record_create   go to state 20
    array_create    go to state 21
    assignment      go to state 22
    if_state        go to state 23
    while           go to state 24
    for             go to state 25
    let_exp         go to state 26
    parentheses     go to state 27


State 61

   65 parentheses: LPAREN exp RPAREN .

    $default  reduce using rule 65 (parentheses)


State 62

   39 sequence_one: exp sequence_two .

    $default  reduce using rule 39 (sequence_one)


State 63

   58 if_state: IF exp THEN . exp
   59         | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 97
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 64

   60 while: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 98
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 65

   61 for: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 99
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 66

   45 no_value: LET decs IN . END
   62 let_exp: LET decs IN . exp_sequence END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    END     shift, and go to state 100
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 101
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    exp_sequence   go to state 102
    parentheses    go to state 27


State 67

   81 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   82       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 103


State 68

   79 vardec: VAR . ID ASSIGN exp
   80       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 104


State 69

   71 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 105


State 70

   66 decs: decs dec .

    $default  reduce using rule 66 (decs)


State 71

   68 dec: tydec .

    $default  reduce using rule 68 (dec)


State 72

   69 dec: vardec .

    $default  reduce using rule 69 (dec)


State 73

   70 dec: fundec .

    $default  reduce using rule 70 (dec)


State 74

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   27        | exp PLUS exp .
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp

    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    $default  reduce using rule 27 (algebra)


State 75

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   28        | exp MINUS exp .
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp

    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    $default  reduce using rule 28 (algebra)


State 76

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   29        | exp TIMES exp .
   30        | exp . DIVIDE exp

    $default  reduce using rule 29 (algebra)


State 77

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   30        | exp DIVIDE exp .

    $default  reduce using rule 30 (algebra)


State 78

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   21        | exp EQ exp .
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (algebra)


State 79

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   22        | exp NEQ exp .
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (algebra)


State 80

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   24        | exp LT exp .
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 24 (algebra)


State 81

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   23        | exp LE exp .
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 23 (algebra)


State 82

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   25        | exp GT exp .
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 25 (algebra)


State 83

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   26        | exp GE exp .
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 26 (algebra)


State 84

   19 algebra: exp . OR exp
   20        | exp . AND exp
   20        | exp AND exp .
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 20 (algebra)


State 85

   19 algebra: exp . OR exp
   19        | exp OR exp .
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50

    $default  reduce using rule 19 (algebra)


State 86

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   57 assignment: lvalue ASSIGN exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 57 (assignment)


State 87

   50 function_call_one: COMMA . exp function_call_one

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 106
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 88

   48 function_call: ID LPAREN exp function_call_one . RPAREN

    RPAREN  shift, and go to state 107


State 89

   34 lvalue_prime: ID LBRACK exp RBRACK . lvalue_prime_two
   56 array_create: ID LBRACK exp RBRACK . OF exp

    LBRACK  shift, and go to state 92
    DOT     shift, and go to state 93
    OF      shift, and go to state 108

    $default  reduce using rule 35 (lvalue_prime_two)

    lvalue_prime_two  go to state 109


State 90

   53 record_create_one: ID EQ . exp record_create_two

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 110
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 91

   51 record_create: ID LBRACE record_create_one RBRACE .

    $default  reduce using rule 51 (record_create)


State 92

   37 lvalue_prime_two: LBRACK . exp RBRACK lvalue_prime_two

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 111
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 93

   36 lvalue_prime_two: DOT . ID lvalue_prime_two

    ID  shift, and go to state 112


State 94

   33 lvalue_prime: ID DOT ID lvalue_prime_two .

    $default  reduce using rule 33 (lvalue_prime)


State 95

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   41 sequence_three: exp . sequence_four

    SEMICOLON  shift, and go to state 60
    RPAREN     shift, and go to state 113
    PLUS       shift, and go to state 41
    MINUS      shift, and go to state 42
    TIMES      shift, and go to state 43
    DIVIDE     shift, and go to state 44
    EQ         shift, and go to state 45
    NEQ        shift, and go to state 46
    LT         shift, and go to state 47
    LE         shift, and go to state 48
    GT         shift, and go to state 49
    GE         shift, and go to state 50
    AND        shift, and go to state 51
    OR         shift, and go to state 52

    sequence_two   go to state 114
    sequence_four  go to state 115


State 96

   40 sequence_two: SEMICOLON sequence_three .

    $default  reduce using rule 40 (sequence_two)


State 97

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   58 if_state: IF exp THEN exp .
   59         | IF exp THEN exp . ELSE exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    ELSE    shift, and go to state 116

    $default  reduce using rule 58 (if_state)


State 98

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   60 while: WHILE exp DO exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    PLUS      [reduce using rule 60 (while)]
    MINUS     [reduce using rule 60 (while)]
    TIMES     [reduce using rule 60 (while)]
    DIVIDE    [reduce using rule 60 (while)]
    EQ        [reduce using rule 60 (while)]
    NEQ       [reduce using rule 60 (while)]
    LT        [reduce using rule 60 (while)]
    LE        [reduce using rule 60 (while)]
    GT        [reduce using rule 60 (while)]
    GE        [reduce using rule 60 (while)]
    AND       [reduce using rule 60 (while)]
    OR        [reduce using rule 60 (while)]
    $default  reduce using rule 60 (while)


State 99

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   61 for: FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    TO      shift, and go to state 117


State 100

   45 no_value: LET decs IN END .

    $default  reduce using rule 45 (no_value)


State 101

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   63 exp_sequence: exp . SEMICOLON exp_sequence
   64             | exp .

    SEMICOLON  shift, and go to state 118
    PLUS       shift, and go to state 41
    MINUS      shift, and go to state 42
    TIMES      shift, and go to state 43
    DIVIDE     shift, and go to state 44
    EQ         shift, and go to state 45
    NEQ        shift, and go to state 46
    LT         shift, and go to state 47
    LE         shift, and go to state 48
    GT         shift, and go to state 49
    GE         shift, and go to state 50
    AND        shift, and go to state 51
    OR         shift, and go to state 52

    $default  reduce using rule 64 (exp_sequence)


State 102

   62 let_exp: LET decs IN exp_sequence . END

    END  shift, and go to state 119


State 103

   81 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   82       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 120


State 104

   79 vardec: VAR ID . ASSIGN exp
   80       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 121
    ASSIGN  shift, and go to state 122


State 105

   71 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 123


State 106

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   50 function_call_one: COMMA exp . function_call_one

    COMMA   shift, and go to state 87
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 49 (function_call_one)

    function_call_one  go to state 124


State 107

   48 function_call: ID LPAREN exp function_call_one RPAREN .

    $default  reduce using rule 48 (function_call)


State 108

   56 array_create: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 125
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 109

   34 lvalue_prime: ID LBRACK exp RBRACK lvalue_prime_two .

    $default  reduce using rule 34 (lvalue_prime)


State 110

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   53 record_create_one: ID EQ exp . record_create_two

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 54 (record_create_two)

    record_create_two  go to state 126


State 111

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   37 lvalue_prime_two: LBRACK exp . RBRACK lvalue_prime_two

    RBRACK  shift, and go to state 127
    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52


State 112

   36 lvalue_prime_two: DOT ID . lvalue_prime_two

    LBRACK  shift, and go to state 92
    DOT     shift, and go to state 93

    $default  reduce using rule 35 (lvalue_prime_two)

    lvalue_prime_two  go to state 128


State 113

   42 sequence_four: RPAREN .

    $default  reduce using rule 42 (sequence_four)


State 114

   43 sequence_four: sequence_two .

    $default  reduce using rule 43 (sequence_four)


State 115

   41 sequence_three: exp sequence_four .

    $default  reduce using rule 41 (sequence_three)


State 116

   59 if_state: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 129
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 117

   61 for: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 130
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 118

   63 exp_sequence: exp SEMICOLON . exp_sequence

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 101
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    exp_sequence   go to state 131
    parentheses    go to state 27


State 119

   62 let_exp: LET decs IN exp_sequence END .

    $default  reduce using rule 62 (let_exp)


State 120

   81 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   82       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 132

    $default  reduce using rule 75 (tyfields)

    tyfields  go to state 133


State 121

   80 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 134


State 122

   79 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 135
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 123

   71 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 136
    LBRACE  shift, and go to state 137
    ARRAY   shift, and go to state 138

    ty  go to state 139


State 124

   50 function_call_one: COMMA exp function_call_one .

    $default  reduce using rule 50 (function_call_one)


State 125

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   56 array_create: ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 56 (array_create)


State 126

   53 record_create_one: ID EQ exp record_create_two .
   55 record_create_two: record_create_two . COMMA ID EQ exp

    COMMA  shift, and go to state 140

    $default  reduce using rule 53 (record_create_one)


State 127

   37 lvalue_prime_two: LBRACK exp RBRACK . lvalue_prime_two

    LBRACK  shift, and go to state 92
    DOT     shift, and go to state 93

    $default  reduce using rule 35 (lvalue_prime_two)

    lvalue_prime_two  go to state 141


State 128

   36 lvalue_prime_two: DOT ID lvalue_prime_two .

    $default  reduce using rule 36 (lvalue_prime_two)


State 129

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   59 if_state: IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 59 (if_state)


State 130

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   61 for: FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52
    DO      shift, and go to state 142


State 131

   63 exp_sequence: exp SEMICOLON exp_sequence .

    $default  reduce using rule 63 (exp_sequence)


State 132

   76 tyfields: ID . COLON ID tyfields_one

    COLON  shift, and go to state 143


State 133

   81 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   82       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 144


State 134

   80 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 145


State 135

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   79 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 79 (vardec)


State 136

   72 ty: ID .

    $default  reduce using rule 72 (ty)


State 137

   73 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 132

    $default  reduce using rule 75 (tyfields)

    tyfields  go to state 146


State 138

   74 ty: ARRAY . OF ID

    OF  shift, and go to state 147


State 139

   71 tydec: TYPE ID EQ ty .

    $default  reduce using rule 71 (tydec)


State 140

   55 record_create_two: record_create_two COMMA . ID EQ exp

    ID  shift, and go to state 148


State 141

   37 lvalue_prime_two: LBRACK exp RBRACK lvalue_prime_two .

    $default  reduce using rule 37 (lvalue_prime_two)


State 142

   61 for: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 149
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 143

   76 tyfields: ID COLON . ID tyfields_one

    ID  shift, and go to state 150


State 144

   81 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   82       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 151
    EQ     shift, and go to state 152


State 145

   80 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 153
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 146

   73 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 154


State 147

   74 ty: ARRAY OF . ID

    ID  shift, and go to state 155


State 148

   55 record_create_two: record_create_two COMMA ID . EQ exp

    EQ  shift, and go to state 156


State 149

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   61 for: FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    PLUS      [reduce using rule 61 (for)]
    MINUS     [reduce using rule 61 (for)]
    TIMES     [reduce using rule 61 (for)]
    DIVIDE    [reduce using rule 61 (for)]
    EQ        [reduce using rule 61 (for)]
    NEQ       [reduce using rule 61 (for)]
    LT        [reduce using rule 61 (for)]
    LE        [reduce using rule 61 (for)]
    GT        [reduce using rule 61 (for)]
    GE        [reduce using rule 61 (for)]
    AND       [reduce using rule 61 (for)]
    OR        [reduce using rule 61 (for)]
    $default  reduce using rule 61 (for)


State 150

   76 tyfields: ID COLON ID . tyfields_one

    COMMA  shift, and go to state 157

    $default  reduce using rule 77 (tyfields_one)

    tyfields_one  go to state 158


State 151

   82 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 159


State 152

   81 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 160
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 153

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   80 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 80 (vardec)


State 154

   73 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 73 (ty)


State 155

   74 ty: ARRAY OF ID .

    $default  reduce using rule 74 (ty)


State 156

   55 record_create_two: record_create_two COMMA ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 161
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 157

   78 tyfields_one: COMMA . ID COLON ID

    ID  shift, and go to state 162


State 158

   76 tyfields: ID COLON ID tyfields_one .

    $default  reduce using rule 76 (tyfields)


State 159

   82 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 163


State 160

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   81 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 81 (fundec)


State 161

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   55 record_create_two: record_create_two COMMA ID EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 55 (record_create_two)


State 162

   78 tyfields_one: COMMA ID . COLON ID

    COLON  shift, and go to state 164


State 163

   82 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp            go to state 165
    algebra        go to state 13
    lvalue         go to state 14
    lvalue_prime   go to state 15
    sequence       go to state 16
    no_value       go to state 17
    negation       go to state 18
    function_call  go to state 19
    record_create  go to state 20
    array_create   go to state 21
    assignment     go to state 22
    if_state       go to state 23
    while          go to state 24
    for            go to state 25
    let_exp        go to state 26
    parentheses    go to state 27


State 164

   78 tyfields_one: COMMA ID COLON . ID

    ID  shift, and go to state 166


State 165

   19 algebra: exp . OR exp
   20        | exp . AND exp
   21        | exp . EQ exp
   22        | exp . NEQ exp
   23        | exp . LE exp
   24        | exp . LT exp
   25        | exp . GT exp
   26        | exp . GE exp
   27        | exp . PLUS exp
   28        | exp . MINUS exp
   29        | exp . TIMES exp
   30        | exp . DIVIDE exp
   82 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 41
    MINUS   shift, and go to state 42
    TIMES   shift, and go to state 43
    DIVIDE  shift, and go to state 44
    EQ      shift, and go to state 45
    NEQ     shift, and go to state 46
    LT      shift, and go to state 47
    LE      shift, and go to state 48
    GT      shift, and go to state 49
    GE      shift, and go to state 50
    AND     shift, and go to state 51
    OR      shift, and go to state 52

    $default  reduce using rule 82 (fundec)


State 166

   78 tyfields_one: COMMA ID COLON ID .

    $default  reduce using rule 78 (tyfields_one)
